[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fbx-tool"
version = "1.1.0"
description = "Professional FBX animation analysis tool with real-time 3D visualization and biomechanical motion processing"
readme = "README.md"
requires-python = ">=3.10,<3.11"
license = {text = "MIT"}
authors = [
    {name = "Noah Butcher", email = "posner.noah@gmail.com"}
]
keywords = ["fbx", "animation", "biomechanics", "gait-analysis", "motion-capture", "3d-visualization", "opengl", "skeleton-viewer"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Topic :: Multimedia :: Graphics :: 3D Modeling",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

dependencies = [
    "numpy>=1.24.0,<2.0.0",
    "PyQt6>=6.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "pyinstaller>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/noahbutcher97/FBX_Tool"
Documentation = "https://github.com/noahbutcher97/FBX_Tool/blob/main/README.md"
Repository = "https://github.com/noahbutcher97/FBX_Tool"
Issues = "https://github.com/noahbutcher97/FBX_Tool/issues"

[project.scripts]
fbx-tool = "fbx_tool.gui.main_window:main"

[tool.setuptools]
packages = ["fbx_tool"]

[tool.setuptools.package-data]
fbx_tool = ["*.py"]

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
# Coverage configuration for pytest-xdist parallel execution
# Note: pytest-cov handles parallel collection automatically with xdist
concurrency = ["multiprocessing"]
source = ["fbx_tool"]
omit = [
    "*/tests/*",
    "*/.fbxenv/*",
    "*/.venv/*",
    "*/site-packages/*",
]
# Disable coverage warnings (expected "no data" warnings from empty xdist workers)
disable_warnings = ["no-data-collected"]

[tool.coverage.report]
# Report configuration
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.pyinstaller]
# PyInstaller configuration
name = "FBX_Tool"
console = false
onefile = true
